# docker run \
#     -e DOWNLOAD_PBF=https://download.geofabrik.de/europe/luxembourg-latest.osm.pbf \
#     -e DOWNLOAD_POLY=https://download.geofabrik.de/europe/luxembourg.poly \
#     -e ALLOW_CORS=enabled \
#     -v osm-data:/data/database/ \
#     overv/openstreetmap-tile-server \
#     import
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maptiler
  namespace: maptiler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: maptiler
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: maptiler
        app-group: maptiler
    spec:
      containers:
        - name: maptiler
          image: maptiler/tileserver-gl
          volumeMounts:
            - name: maptiler
              mountPath: /data
          resources:
            requests:
              memory: "2Gi"
              cpu: "0.5"
      volumes:
        - name: maptiler
          persistentVolumeClaim:
            claimName: maptiler

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: maptiler
  namespace: maptiler
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: maptiler
  namespace: maptiler
spec:
  selector:
    app-group: maptiler
  ports:
    - name: http
      protocol: TCP
      port: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: maptiler-ingress
  namespace: maptiler
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  tls:
    - hosts:
        - opentiles.predictivemovement.se
      secretName: opentiles-prod-tls
  rules:
    - host: opentiles.predictivemovement.se
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: opentiles
                port:
                  number: 80
