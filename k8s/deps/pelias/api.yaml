# Source: pelias/templates/api-service.tpl
apiVersion: v1
kind: Service
metadata:
  name: pelias-api
  namespace: pelias
spec:
  selector:
    app-group: pelias-api
  ports:
    - name: http
      protocol: TCP
      port: 3100
      targetPort: 3100
  type: ClusterIP
---
# Source: pelias/templates/api-deployment.tpl
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pelias-api
  namespace: pelias
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pelias-api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: pelias-api
        app-group: pelias-api
    spec:
      initContainers:
        - name: create-schema
          image: pelias/schema:v6.4.0
          command: ["sh", "-c", "./bin/create_index || true"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
      containers:
        - name: pelias-api
          image: pelias/api:v5.54.0
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
          env:
            - name: PELIAS_CONFIG
              value: "/etc/config/pelias.json"
          resources:
            requests:
              memory: "0.25Gi"
              cpu: "0.1"
          ports:
            - containerPort: 3100
      volumes:
        - name: config-volume
          configMap:
            name: pelias-json-configmap
            items:
              - key: pelias.json
                path: pelias.json
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pelias-api-ingress
  namespace: pelias
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - pelias.predictivemovement.com
      secretName: pelias-prod-tls
  rules:
    - host: pelias.predictivemovement.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pelias-api
                port:
                  number: 3100
